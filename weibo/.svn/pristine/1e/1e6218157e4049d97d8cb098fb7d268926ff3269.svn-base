package www.csdn.project.action;

import java.io.File;
import java.io.IOException;
import java.util.List;

import org.apache.commons.io.FileUtils;
import org.apache.struts2.ServletActionContext;

import www.csdn.project.domain.Admins;
import www.csdn.project.domain.Collections;
import www.csdn.project.domain.Messages;
import www.csdn.project.domain.Pictures;
import www.csdn.project.domain.Users;
import www.csdn.project.service.PicturesService;
import www.csdn.project.utils.ComboBoxBean;
import www.csdn.project.utils.Pagination;

/**
 * 
 * @author 曹建波 2013-5-7 下午4:10:17
 * 
 */
public class PicturesAction extends BaseAction {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Pictures pictures;
	private Messages messages;
	private Users users;
	private PicturesService picturesService;

	private File upload; // 上传的文件
	private String uploadContentType;// 文件类型
	private String uploadFileName;// 文件的名称
	private String finalPath;

	private String useId;
	private String messId;
	private String picType;
	private String randomNumber;
	
	
	public String getRandomNumber() {
		return randomNumber;
	}

	public void setRandomNumber(String randomNumber) {
		this.randomNumber = randomNumber;
	}

	public String getUseId() {
		return useId;
	}

	public void setUseId(String useId) {
		this.useId = useId;
	}

	public String getMessId() {
		return messId;
	}

	public void setMessId(String messId) {
		this.messId = messId;
	}

	public String getPicType() {
		return picType;
	}

	public void setPicType(String picType) {
		this.picType = picType;
	}

	public String getFinalPath() {
		return finalPath;
	}

	public File getUpload() {
		return upload;
	}

	public void setFinalPath(String finalPath) {
		this.finalPath = finalPath;
	}

	public void setUpload(File upload) {
		this.upload = upload;
	}

	public String getUploadContentType() {
		return uploadContentType;
	}

	public void setUploadContentType(String uploadContentType) {
		this.uploadContentType = uploadContentType;
	}

	public String getUploadFileName() {
		return uploadFileName;
	}

	public void setUploadFileName(String uploadFileName) {
		this.uploadFileName = uploadFileName;
	}

	public void setPicturesService(PicturesService picturesService) {
		this.picturesService = picturesService;
	}

	public void setPictures(Pictures pictures) {
		this.pictures = pictures;
	}

	public Messages getMessages() {
		return messages;
	}

	public void setMessages(Messages messages) {
		this.messages = messages;
	}

	public Users getUsers() {
		return users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	public Pictures getPictures() {
		return pictures;
	}

	public String query() {
		pagination = new Pagination(this.page, this.rows);
		String whereSql = spliceSql();
		pagination.setTotal(baseService.getCount(Pictures.class, whereSql));
		pagination.setRows(baseService.getObjects(Pictures.class, whereSql,
				pagination.getFrom(), pagination.getSize(), this.order,
				this.sort));
		return "query";
	}

	private String spliceSql() {
		String whereSql = " as tt where 1=1";
		if (pictures != null) {
			if (pictures.getMessages() != null) {
				Integer mid = pictures.getMessages().getId();

				if (!"".equals(mid) && (mid != null)) {
					whereSql += " and tt.messages.id = '" + mid + "'";
				}
			}

			if (pictures.getUsers() != null) {
				String uEmail = pictures.getUsers().getEmail();
				if (!"".equals(uEmail) && (uEmail != null)) {
					whereSql += " and tt.users.email like '%" + uEmail + "%'";
				}
			}

			if (pictures.getType() != null) {
				String pType = pictures.getType();
				if (!"".equals(pType) && (pType != null)) {
					whereSql += " and tt.type = '" + pType + "'";
				}
			}
		}
		return whereSql;
	}

	public String getAllUsers() {
		List<Users> users = baseService.getAllObjects(Users.class);
		for (Users user : users) {
			list.add(new ComboBoxBean(user.getId(), user.getEmail(), false));
		}
		return "queryall";
	}

	public String getAllMessages() {
		List<Messages> messages = baseService.getAllObjects(Messages.class);
		for (Messages message : messages) {
			list.add(new ComboBoxBean(message.getId(), message.getId()
					.toString(), false));
		}
		return "queryall";
	}

	public String getAllPictures() {
		List<Pictures> pictures = baseService.getAllObjects(Pictures.class);
		ComboBoxBean comboBoxBean = null;
		for (Pictures picture : pictures) {
			comboBoxBean = new ComboBoxBean(null, picture.getType(), false);
			if (list.size() == 0) {
				list.add(comboBoxBean);
			} else {
				boolean pic_flag = false;
				for (ComboBoxBean bean : list) {
					if ((bean.getText().equals(comboBoxBean.getText()))) {
						pic_flag = true;
						break;
					}
				}
				if (!pic_flag) {
					list.add(comboBoxBean);
				}
			}
		}
		return "queryall";
	}

	public String saveOrUpdateObject() {
		System.out.println("pictures:"+pictures.toString());
		this.flag = baseService.saveOrUpdateObject(pictures);
		return "saveorupdate";
	}

	public String deleteObject() {
		this.flag = baseService.deleteObjects(Pictures.class, ids);
		return "delete";
	}

	public String upload() {

		String uplPath = "";
		if (picType != null && picType != "") {
			if (useId != null && useId != "" && messId != null && messId != "") {
				uplPath = "/" + useId + "/" + messId + "/" + picType;
			} else {
				if (messId != null && messId != "") {

				} else {
					uplPath = "/" + useId + "/" + picType;
				}
			}
		}

		if (uplPath != null && uplPath != "") {
			System.out.println("上传开始");
			// 设置上传的路径
			String path = ServletActionContext.getServletContext().getRealPath(
					"/userUploadImages")
					+ uplPath;
			System.out.println("path-----" + path);
			// 上传路径的文件
			File pfile = new File(path);
			// 文件的路径创建
			if (!pfile.exists()) {
				pfile.mkdirs();
			}

			try {
				if (upload != null) {
					//String currentTime = System.currentTimeMillis() + "";
					FileUtils.copyFile(upload, new File(pfile, randomNumber
							+ "_" + uploadFileName));
					finalPath = "/userUploadImages" + uplPath + "/"
							+ randomNumber + "_" + uploadFileName;
					System.out.println("上传成功");
					System.out.println(finalPath);
					return "uploadsucceed";
				}
			} catch (IOException e) {
				e.printStackTrace();

			}
		}
		
		return "uploadfail";
	}
}
